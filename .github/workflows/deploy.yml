name: Deploy WalGraph Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test Frontend
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./WalGraph-frontend-app
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './WalGraph-frontend-app/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUI_NETWORK: testnet
        NEXT_PUBLIC_WALRUS_AGGREGATOR_URL: https://walrus-testnet-aggregator.natsai.xyz
        NEXT_PUBLIC_WALRUS_PUBLISHER_URL: https://walrus-testnet-publisher.natsai.xyz

  # Test API Server
  test-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api-server
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './api-server/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Build application
      run: npm run build

  # Deploy Frontend to Vercel
  deploy-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
        working-directory: ./WalGraph-frontend-app
        vercel-args: '--prod'

  # Deploy API Server to Vercel
  deploy-api:
    needs: test-api
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_API_PROJECT_ID }}
        working-directory: ./api-server
        vercel-args: '--prod'

  # Deploy to Docker Hub (Optional)
  deploy-docker:
    needs: [test-frontend, test-api]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./WalGraph-frontend-app
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/walgraph-frontend:latest
    
    - name: Build and push API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api-server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/walgraph-api:latest 